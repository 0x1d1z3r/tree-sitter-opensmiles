module.exports = grammar({
  name: "opensmiles",
  rules: {
    smiles: ($) => seq(optional($.chain), $.terminator),
    digit: ($) => choice("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"),
    number: ($) => repeat1($.digit),
    space: ($) => " ",
    tab: ($) => "\t",
    linefeed: ($) => "\n",
    carriage_return: ($) => "\r",
    end_of_string: ($) => "\x04",
    atom: ($) =>
      choice($.bracket_atom, $.aliphatic_organic, $.aromatic_organic, "*"),
    aliphatic_organic: ($) =>
      choice("B", "C", "N", "O", "S", "P", "F", "Cl", "Br", "I"),
    aromatic_organic: ($) => choice("b", "c", "n", "o", "s", "p"),
    bracket_atom: ($) =>
      seq(
        "[",
        optional($.isotope),
        $.symbol,
        optional($.chiral),
        optional($.hcount),
        optional($.charge),
        optional($.sclass),
        "]"
      ),
    symbol: ($) => choice($.element_symbols, $.aromatic_symbols, "*"),
    isotope: ($) => $.number,
    element_symbols: ($) =>
      choice(
        "H",
        "He",
        "Li",
        "Be",
        "B",
        "C",
        "N",
        "O",
        "F",
        "Ne",
        "Na",
        "Mg",
        "Al",
        "Si",
        "P",
        "S",
        "Cl",
        "Ar",
        "K",
        "Ca",
        "Sc",
        "Ti",
        "V",
        "Cr",
        "Mn",
        "Fe",
        "Co",
        "Ni",
        "Cu",
        "Zn",
        "Ga",
        "Ge",
        "As",
        "Se",
        "Br",
        "Kr",
        "Rb",
        "Sr",
        "Y",
        "Zr",
        "Nb",
        "Mo",
        "Tc",
        "Ru",
        "Rh",
        "Pd",
        "Ag",
        "Cd",
        "In",
        "Sn",
        "Sb",
        "Te",
        "I",
        "Xe",
        "Cs",
        "Ba",
        "La",
        "Ce",
        "Pr",
        "Nd",
        "Pm",
        "Sm",
        "Eu",
        "Gd",
        "Tb",
        "Dy",
        "Ho",
        "Er",
        "Tm",
        "Yb",
        "Lu",
        "Hf",
        "Ta",
        "W",
        "Re",
        "Os",
        "Ir",
        "Pt",
        "Au",
        "Hg",
        "Tl",
        "Pb",
        "Bi",
        "Po",
        "At",
        "Rn",
        "Fr",
        "Ra",
        "Ac",
        "Th",
        "Pa",
        "U",
        "Np",
        "Pu",
        "Am",
        "Cm",
        "Bk",
        "Cf",
        "Es",
        "Fm",
        "Md",
        "No",
        "Lr"
      ),
    aromatic_symbols: ($) => choice("c", "n", "o", "p", "se", "as"),
    chiral: ($) =>
      choice(
        "@",
        "@@",
        "@TH1",
        "@TH2",
        "@AL1",
        "@AL2",
        "@SP1",
        "@SP2",
        "@SP3",
        "@TB1",
        "@TB2",
        "@TB3",
        "@TB4",
        "@TB5",
        "@TB6",
        "@TB7",
        "@TB8",
        "@TB9",
        "@TB10",
        "@TB11",
        "@TB12",
        "@TB13",
        "@TB14",
        "@TB15",
        "@TB16",
        "@TB17",
        "@TB18",
        "@TB19",
        "@TB20",
        "@OH1",
        "@OH2",
        "@OH3",
        "@OH4",
        "@OH5",
        "@OH6",
        "@OH7",
        "@OH8",
        "@OH9",
        "@OH10",
        "@OH11",
        "@OH12",
        "@OH13",
        "@OH14",
        "@OH15",
        "@OH16",
        "@OH17",
        "@OH18",
        "@OH19",
        "@OH20",
        "@OH21",
        "@OH22",
        "@OH23",
        "@OH24",
        "@OH25",
        "@OH26",
        "@OH27",
        "@OH28",
        "@OH29",
        "@OH30",
        seq("@TB", $.digit, $.digit),
        seq("@OH", $.digit, $.digit)
      ),
    hcount: ($) => seq("H", optional($.digit)),
    charge: ($) =>
      choice(
        seq("-", optional($.digit), $.digit),
        seq("+", optional($.digit), $.digit)
      ),
    sclass: ($) => seq(":", $.number),
    bond: ($) => choice("-", "=", "#", "$", ":", "/", "\\"),
    ringbond: ($) =>
      choice(
        seq(optional($.bond), $.digit),
        seq(optional($.bond), "%", $.digit, $.digit)
      ),
    branched_atom: ($) => prec.right(seq($.atom, repeat($.ringbond),repeat($.branch))),
    branch: ($) =>
      choice(
        seq("(", $.chain, ")"),
        seq("(", $.bond, $.chain, ")"),
        seq("(", $.dot, $.chain, ")")
      ),
    chain: ($) =>
      choice(
       seq($.branched_atom),
       seq($.chain, $.branched_atom),
       seq($.chain, $.bond, $.branched_atom),
       seq($.chain, $.dot, $.branched_atom)
      ),
    dot: ($) => ".",
    terminator: ($) =>
      choice($.space, $.tab, $.linefeed, $.carriage_return, $.end_of_string),
  },
});
